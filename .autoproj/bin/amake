#!/usr/bin/env /home/alveena/.rbenv/versions/2.5.1/bin/ruby
#
# This file was generated by Bundler.
#

# Autoproj generated preamble, v1
if defined?(Bundler)
    if Bundler.respond_to?(:with_unbundled_env)
        Bundler.with_unbundled_env do
            exec(Hash['RUBYLIB' => nil], $0, *ARGV)
        end
    else
        Bundler.with_clean_env do
            exec(Hash['RUBYLIB' => nil], $0, *ARGV)
        end
    end
elsif ENV['RUBYLIB']
    exec(Hash['RUBYLIB' => nil], $0, *ARGV)
end

ENV['BUNDLE_GEMFILE'] = '/home/alveena/workspace/.autoproj/Gemfile'
ENV['AUTOPROJ_CURRENT_ROOT'] = '/home/alveena/workspace'
Gem.paths = Hash['GEM_HOME' => '/home/alveena/.local/share/autoproj/gems/ruby/2.5.0', 'GEM_PATH' => '']
# frozen_string_literal: true

#
# This file was generated by Bundler.
#
# The application 'amake' is installed as part of a gem, and
# this file is here to facilitate running it.
#

require "pathname"
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile",
  Pathname.new(__FILE__).realpath)

bundle_binstub = File.expand_path("../bundle", __FILE__)

if File.file?(bundle_binstub)
  if File.read(bundle_binstub, 300) =~ /This file was generated by Bundler/
    load(bundle_binstub)
  else
    abort("Your `bin/bundle` was not generated by Bundler, so this binstub cannot run.
Replace `bin/bundle` by running `bundle binstubs bundler --force`, then run this command again.")
  end
end

require "rubygems"
require "bundler/setup"

load Gem.bin_path("autoproj", "amake")
